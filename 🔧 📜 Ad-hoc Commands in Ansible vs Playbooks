# Ad-hoc Commands in Ansible vs Playbooks

## Ad-hoc Commands

Ad-hoc commands in Ansible are one-time commands that you can run on remote systems without the need for writing complex playbooks. 
They are useful for performing quick tasks or executing simple operations on managed hosts. Ad-hoc commands are executed from the 
command-line interface (CLI) and follow a specific syntax.

Ad-hoc commands are different from playbooks in the following ways:

- Playbooks provide a more structured and reusable way of defining and executing tasks, while ad-hoc commands are more suitable for quick, 
  one-off tasks.
- Playbooks allow you to define multiple tasks, manage dependencies, and apply conditions, whereas ad-hoc commands focus on executing a single 
  task at a time.
- Playbooks provide a more declarative approach, where you define the desired state of your systems, 
  while ad-hoc commands are more imperative, specifying the exact actions to be taken.

## Examples of Ad-hoc Commands in Red Hat and Ubuntu

### Red Hat Examples:

1. **Ping**: Check connectivity to a host.
   ```shell
   ansible <hostname> -m ping
   ```
   This command sends a ping request to the specified host and verifies if it is reachable.

2. **Package Installation**: Install a package using the package manager (yum).
   ```shell
   ansible <hostname> -m yum -a "name=<package_name> state=present"
   ```
   This command installs the specified package on the target host using the yum package manager.

3. **Service Restart**: Restart a service.
   ```shell
   ansible <hostname> -m service -a "name=<service_name> state=restarted"
   ```
   This command restarts the specified service on the target host.

4. **File Copy**: Copy a file to a remote host.
   ```shell
   ansible <hostname> -m copy -a "src=<source_file> dest=<destination_file>"
   ```
   This command copies a file from the local machine to the target host.

5. **Command Execution**: Execute a command on a remote host.
   ```shell
   ansible <hostname> -m command -a "<command>"
   ```
   This command runs the specified command on the target host.

### Ubuntu Examples:

1. **Ping**: Check connectivity to a host.
   ```shell
   ansible <hostname> -m ping
   ```
   This command sends a ping request to the specified host and verifies if it is reachable.

2. **Package Installation**: Install a package using the package manager (apt).
   ```shell
   ansible <hostname> -m apt -a "name=<package_name> state=present"
   ```
   This command installs the specified package on the target host using the apt package manager.

3. **Service Restart**: Restart a service.
   ```shell
   ansible <hostname> -m service -a "name=<service_name> state=restarted"
   ```
   This command restarts the specified service on the target host.

4. **File Copy**: Copy a file to a remote host.
   ```shell
   ansible <hostname> -m copy -a "src=<source_file> dest=<destination_file>"
   ```
   This command copies a file from the local machine to the target host.

5. **Command Execution**: Execute a command on a remote host.
   ```shell
   ansible <hostname> -m command -a "<command>"
   ```
   This command runs the specified command on the target host.

ðŸŒŸ Ad-hoc commands provide a quick and convenient way to perform specific tasks on remote systems without the need for writing playbooks. 
They are particularly useful for ad-hoc operations, testing, or troubleshooting. Remember to replace `<hostname>` with the actual hostname 
or IP address of the target host and customize the arguments based on your specific requirements.
